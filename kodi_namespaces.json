{
    "namespaces": {
        "AddOns": {
            "ExecuteAddon":  {"description": "Executes the given addon with the given parameters (if possible)", "params": [{"name": "addonid", "required": true, "type": "string"}, {"default": "", "name": "params", "type": [{"additionalProperties": {"default": "", "type": "string"}, "type": "object"}, {"items": {"type": "string"}, "type": "array"}, {"description": "URL path (must start with / or ?", "type": "string"}]}, {"default": false, "name": "wait", "type": "boolean"}], "permission": "ExecuteAddon", "returns": {"type": "string"}, "type": "method"},
            "GetAddonDetails":  {"description": "Gets the details of a specific addon", "params": [{"name": "addonid", "required": true, "type": "string"}, {"$ref": "Addon.Fields", "name": "properties"}], "permission": "ReadData", "returns": {"properties": {"addon": {"$ref": "Addon.Details", "required": true}, "limits": {"$ref": "List.LimitsReturned", "required": true}}, "type": "object"}, "type": "method"},
            "GetAddons":  {"description": "Gets all available addons", "params": [{"$ref": "Addon.Types", "default": "unknown", "name": "type"}, {"$ref": "Addon.Content", "default": "unknown", "description": "Content provided by the addon. Only considered for plugins and scripts.", "name": "content"}, {"default": "all", "name": "enabled", "type": [{"type": "boolean"}, {"enums": ["all"], "type": "string"}]}, {"$ref": "Addon.Fields", "name": "properties"}, {"$ref": "List.Limits", "name": "limits"}, {"default": true, "name": "installed", "type": [{"type": "boolean"}, {"enums": ["all"], "type": "string"}]}], "permission": "ReadData", "returns": {"properties": {"addons": {"items": {"$ref": "Addon.Details"}, "type": "array"}, "limits": {"$ref": "List.LimitsReturned", "required": true}}, "type": "object"}, "type": "method"},
            "SetAddonEnabled":  {"description": "Enables/Disables a specific addon", "params": [{"name": "addonid", "required": true, "type": "string"}, {"$ref": "Global.Toggle", "name": "enabled", "required": true}], "permission": "ManageAddon", "returns": {"type": "string"}, "type": "method"}
        },
        "Application": {
            "GetProperties":  {"description": "Retrieves the values of the given properties","params": [{"items": {"$ref": "Application.Property.Name"},"name": "properties","required": true,"type": "array","uniqueItems": true}],"permission": "ReadData","returns": {"$ref": "Application.Property.Value"},"type": "method"},
            "Quit":  {"description": "Quit application","params": [],"permission": "ControlPower","returns": {"type": "string"},"type": "method"},
            "SetMute":  {"description": "Toggle mute/unmute","params": [{"$ref": "Global.Toggle","name": "mute","required": true}],"permission": "ControlPlayback","returns": {"description": "Mute state","type": "boolean"},"type": "method"},
            "SetVolume":  {"description": "Set the current volume", "params": [{"name": "volume", "required": true, "type": [{"maximum": 100, "minimum": 0, "type": "integer"}, {"$ref": "Global.IncrementDecrement"}]}], "permission": "ControlPlayback", "returns": {"type": "integer"}, "type": "method"}
        },
        "AudioLibrary": {
            "Clean":  {"description": "Cleans the audio library from non-existent items", "params": [{"default": true, "description": "Whether or not to show the progress bar or any other GUI dialog", "name": "showdialogs", "type": "boolean"}], "permission": "RemoveData", "returns": {"type": "string"}, "type": "method"},
            "GetAlbumDetails":  {"description": "Retrieve details about a specific album", "params": [{"$ref": "Library.Id", "name": "albumid", "required": true}, {"$ref": "Audio.Fields.Album", "name": "properties"}], "permission": "ReadData", "returns": {"properties": {"albumdetails": {"$ref": "Audio.Details.Album"}}, "type": "object"}, "type": "method"},
            "GetAlbums":  {"description": "Retrieve all albums from specified artist (and role) or that has songs of the specified genre", "params": [{"$ref": "Audio.Fields.Album", "name": "properties"}, {"$ref": "List.Limits", "name": "limits"}, {"$ref": "List.Sort", "name": "sort"}, {"name": "filter", "type": [{"additionalProperties": false, "properties": {"genreid": {"$ref": "Library.Id", "description": "Song genre. Filter for existence of songs with this genre", "required": true}}, "type": "object"}, {"additionalProperties": false, "properties": {"genre": {"description": "Song genre. Filter for existence of songs with this genre", "minLength": 1, "required": true, "type": "string"}}, "type": "object"}, {"additionalProperties": false, "properties": {"artistid": {"$ref": "Library.Id", "required": true}}, "type": "object"}, {"additionalProperties": false, "properties": {"artistid": {"$ref": "Library.Id", "required": true}, "roleid": {"$ref": "Library.Id", "required": true}}, "type": "object"}, {"additionalProperties": false, "properties": {"artistid": {"$ref": "Library.Id", "required": true}, "role": {"minLength": 1, "required": true, "type": "string"}}, "type": "object"}, {"additionalProperties": false, "properties": {"artist": {"minLength": 1, "required": true, "type": "string"}}, "type": "object"}, {"additionalProperties": false, "properties": {"artist": {"minLength": 1, "required": true, "type": "string"}, "roleid": {"$ref": "Library.Id", "required": true}}, "type": "object"}, {"additionalProperties": false, "properties": {"artist": {"minLength": 1, "required": true, "type": "string"}, "role": {"minLength": 1, "required": true, "type": "string"}}, "type": "object"}, {"$ref": "List.Filter.Albums"}]}, {"default": false, "name": "includesingles", "type": "boolean"}, {"default": false, "description": "Whether or not to include all roles when filtering by artist, rather than the default of excluding other contributions. When true it overrides any role filter value.", "name": "allroles", "type": "boolean"}], "permission": "ReadData", "returns": {"properties": {"albums": {"items": {"$ref": "Audio.Details.Album"}, "type": "array"}, "limits": {"$ref": "List.LimitsReturned", "required": true}}, "type": "object"}, "type": "method"},
            "GetArtistDetails":  {"description": "Retrieve details about a specific artist", "params": [{"$ref": "Library.Id", "name": "artistid", "required": true}, {"$ref": "Audio.Fields.Artist", "name": "properties"}], "permission": "ReadData", "returns": {"properties": {"artistdetails": {"$ref": "Audio.Details.Artist"}}, "type": "object"}, "type": "method"},
            "GetArtists":  {"description": "Retrieve all artists. For backward compatibility by default this implicitly does not include those that only contribute other roles, however absolutely all artists can be returned using allroles=true", "params": [{"$ref": "Optional.Boolean", "default": null, "description": "Whether or not to only include album artists rather than the artists of only individual songs as well. If the parameter is not passed or is passed as null the GUI setting will be used", "name": "albumartistsonly"}, {"$ref": "Audio.Fields.Artist", "name": "properties"}, {"$ref": "List.Limits", "name": "limits"}, {"$ref": "List.Sort", "name": "sort"}, {"name": "filter", "type": [{"additionalProperties": false, "properties": {"genreid": {"$ref": "Library.Id", "description": "Deprecated, use songgenreid. Filter for existence of songs with this genre", "required": true}}, "type": "object"}, {"additionalProperties": false, "properties": {"songgenreid": {"$ref": "Library.Id", "description": "Song genreid. Filter for existence of songs with this genre", "required": true}}, "type": "object"}, {"additionalProperties": false, "properties": {"roleid": {"$ref": "Library.Id", "required": true}, "songgenreid": {"$ref": "Library.Id", "required": true}}, "type": "object"}, {"additionalProperties": false, "properties": {"role": {"minLength": 1, "required": true, "type": "string"}, "songgenreid": {"$ref": "Library.Id", "required": true}}, "type": "object"}, {"additionalProperties": false, "properties": {"genre": {"description": "Deprecated, use songgenre. Filter for existence of songs with this genre", "minLength": 1, "required": true, "type": "string"}}, "type": "object"}, {"additionalProperties": false, "properties": {"songgenre": {"description": "Song genre. Filter for existence of songs with this genre", "minLength": 1, "required": true, "type": "string"}}, "type": "object"}, {"additionalProperties": false, "properties": {"roleid": {"$ref": "Library.Id", "required": true}, "songgenre": {"minLength": 1, "required": true, "type": "string"}}, "type": "object"}, {"additionalProperties": false, "properties": {"role": {"minLength": 1, "required": true, "type": "string"}, "songgenre": {"minLength": 1, "required": true, "type": "string"}}, "type": "object"}, {"additionalProperties": false, "properties": {"albumid": {"$ref": "Library.Id", "required": true}}, "type": "object"}, {"additionalProperties": false, "properties": {"album": {"minLength": 1, "required": true, "type": "string"}}, "type": "object"}, {"additionalProperties": false, "properties": {"songid": {"$ref": "Library.Id", "required": true}}, "type": "object"}, {"additionalProperties": false, "properties": {"roleid": {"$ref": "Library.Id", "required": true}, "songid": {"$ref": "Library.Id", "required": true}}, "type": "object"}, {"additionalProperties": false, "properties": {"role": {"minLength": 1, "required": true, "type": "string"}, "songid": {"$ref": "Library.Id", "required": true}}, "type": "object"}, {"additionalProperties": false, "properties": {"roleid": {"$ref": "Library.Id", "description": "Role contributed by artist. Overridden by allroles parameter", "required": true}}, "type": "object"}, {"additionalProperties": false, "properties": {"role": {"description": "Role contributed by artist. Overridden by allroles parameter", "minLength": 1, "required": true, "type": "string"}}, "type": "object"}, {"$ref": "List.Filter.Artists"}]}, {"default": false, "description": "Whether or not to include all artists irrespective of the role they contributed. When true it overrides any role filter value.", "name": "allroles", "type": "boolean"}], "permission": "ReadData", "returns": {"properties": {"artists": {"items": {"$ref": "Audio.Details.Artist"}, "type": "array"}, "limits": {"$ref": "List.LimitsReturned", "required": true}}, "type": "object"}, "type": "method"},
            "GetProperties": {"description": "Retrieves the values of the music library properties", "params": [{"items": {"$ref": "Audio.Property.Name"}, "name": "properties", "required": true, "type": "array", "uniqueItems": true}], "permission": "ReadData", "returns": {"$ref": "Audio.Property.Value"}, "type": "method"},
            "GetRecentlyAddedAlbums": {"description": "Retrieve recently added albums", "params": [{"$ref": "Audio.Fields.Album", "name": "properties"}, {"$ref": "List.Limits", "name": "limits"}, {"$ref": "List.Sort", "name": "sort"}], "permission": "ReadData", "returns": {"properties": {"albums": {"items": {"$ref": "Audio.Details.Album"}, "type": "array"}, "limits": {"$ref": "List.LimitsReturned", "required": true}}, "type": "object"}, "type": "method"},
            "GetRecentlyAddedSongs": {"description": "Retrieve recently added songs", "params": [{"$ref": "List.Amount", "default": -1, "description": "The amount of recently added albums from which to return the songs", "name": "albumlimit"}, {"$ref": "Audio.Fields.Song", "name": "properties"}, {"$ref": "List.Limits", "name": "limits"}, {"$ref": "List.Sort", "name": "sort"}], "permission": "ReadData", "returns": {"properties": {"limits": {"$ref": "List.LimitsReturned", "required": true}, "songs": {"items": {"$ref": "Audio.Details.Song"}, "type": "array"}}, "type": "object"}, "type": "method"},
            "GetRecentlyPlayedAlbums": {"description": "Retrieve recently played albums", "params": [{"$ref": "Audio.Fields.Album", "name": "properties"}, {"$ref": "List.Limits", "name": "limits"}, {"$ref": "List.Sort", "name": "sort"}], "permission": "ReadData", "returns": {"properties": {"albums": {"items": {"$ref": "Audio.Details.Album"}, "type": "array"}, "limits": {"$ref": "List.LimitsReturned", "required": true}}, "type": "object"}, "type": "method"},
            "GetRecentlyPlayedSongs":   {"description": "Retrieve recently played songs", "params": [{"$ref": "Audio.Fields.Song", "name": "properties"}, {"$ref": "List.Limits", "name": "limits"}, {"$ref": "List.Sort", "name": "sort"}], "permission": "ReadData", "returns": {"properties": {"limits": {"$ref": "List.LimitsReturned", "required": true}, "songs": {"items": {"$ref": "Audio.Details.Song"}, "type": "array"}}, "type": "object"}, "type": "method"},
            "GetSources": {"description": "Get all music sources, including unique ID", "params": [{"$ref": "Library.Fields.Source", "name": "properties"}, {"$ref": "List.Limits", "name": "limits"}, {"$ref": "List.Sort", "name": "sort"}], "permission": "ReadData", "returns": {"properties": {"limits": {"$ref": "List.LimitsReturned", "required": true}, "sources": {"items": {"$ref": "Library.Details.Source"}, "required": true, "type": "array"}}, "type": "object"}, "type": "method"},
            "Scan":  {"description": "Scans the audio sources for new library items", "params": [{"default": "", "name": "directory", "type": "string"}, {"default": true, "description": "Whether or not to show the progress bar or any other GUI dialog", "name": "showdialogs", "type": "boolean"}], "permission": "UpdateData", "returns": {"type": "string"}, "type": "method"}
        },
        "Favorites": {
            "AddFavorite":  {"description": "Add a favourite with the given details", "params": [{"name": "title", "required": true, "type": "string"}, {"$ref": "Favourite.Type", "name": "type", "required": true}, {"$ref": "Optional.String", "default": null, "description": "Required for media, script and androidapp favourites types", "name": "path"}, {"$ref": "Optional.String", "default": null, "description": "Required for window favourite type", "name": "window"}, {"$ref": "Optional.String", "default": null, "name": "windowparameter"}, {"$ref": "Optional.String", "default": null, "name": "thumbnail"}], "permission": "UpdateData", "returns": {"type": "string"}, "type": "method"},
            "GetFavorites":  {"description": "Retrieve all favourites", "params": [{"default": null, "name": "type", "type": [{"type": "null"}, {"$ref": "Favourite.Type"}]}, {"$ref": "Favourite.Fields.Favourite", "name": "properties"}], "permission": "ReadData", "returns": {"properties": {"favourites": {"items": {"$ref": "Favourite.Details.Favourite"}, "type": "array"}, "limits": {"$ref": "List.LimitsReturned", "required": true}}, "type": "object"}, "type": "method"}
        },
        "GUI": {
            "ActivateWindow":  {"description": "Activates the given window", "params": [{"$ref": "GUI.Window", "name": "window", "required": true}, {"items": {"minLength": 1, "type": "string"}, "minItems": 1, "name": "parameters", "type": "array"}], "permission": "ControlGUI", "returns": {"type": "string"}, "type": "method"},
            "ShowNotification":  {"description": "Shows a GUI notification", "params": [{"name": "title", "required": true, "type": "string"}, {"name": "message", "required": true, "type": "string"}, {"default": "", "name": "image","type": [{"enums": ["info", "warning", "error"], "type": "string"}, {"type": "string"}]}, {"default": 5000, "description": "The time in milliseconds the notification will be visible", "minimum": 1500, "name": "displaytime", "type": "integer"}], "permission": "ControlGUI", "returns": {"type": "string"}, "type": "method"}
        },
        "Input": {
            "Back":  {"description": "Goes back in GUI","params": [],"permission": "Navigate","returns": {"type": "string"},"type": "method"},
            "ButtonEvent":  {"description": "Send a button press event","params": [{"description": "Button name","name": "button","required": true,"type": "string"},{"description": "Keymap name (KB, XG, R1, or R2)","enums": ["KB","XG","R1","R2"],"name": "keymap","required": true,"type": "string"},{"default": 0,"description": "Number of milliseconds to simulate button hold.","minimum": 0,"name": "holdtime","type": "integer"}],"permission": "Navigate","returns": {"type": "string"},"type": "method"},
            "ContextMenu":  {"description": "Shows the context menu","params": [],"permission": "Navigate","returns": {"type": "string"},"type": "method"},
            "Down":  {"description": "Navigate Down in GUI","params": [],"permission": "Navigate","returns": {"type": "string"},"type": "method"},
            "ExecuteAction":  {"description": "Execute a specific action", "params": [{"$ref": "Input.Action", "name": "action", "required": true}], "permission": "Navigate", "returns": {"type": "string"}, "type": "method"},
            "Home":  {"description": "Goes to Home window in GUI","params": [],"permission": "Navigate","returns": {"type": "string"},"type": "method"},
            "Info":  {"description": "Shows the Information dialog","params": [],"permission": "Navigate","returns": {"type": "string"},"type": "method"},
            "Left":  {"description": "Navigate Left in GUI","params": [],"permission": "Navigate","returns": {"type": "string"},"type": "method"},
            "Right":  {"description": "Navigate Right in GUI","params": [],"permission": "Navigate","returns": {"type": "string"},"type": "method"},
            "Select":  {"description": "Select current item in GUI", "params": [], "permission": "Navigate", "returns": {"type": "string"}, "type": "method"},
            "SendText":  {"description": "Send a generic (unicode) text", "params": [{"description": "Unicode text", "name": "text", "required": true, "type": "string"}, {"default": true, "description": "Whether this is the whole input or not (closes an open input dialog if true).", "name": "done", "type": "boolean"}], "permission": "Navigate", "returns": {"type": "string"}, "type": "method"},
            "ShowCodec":  {"description": "Show codec information of the playing item", "params": [], "permission": "Navigate", "returns": {"type": "string"}, "type": "method"},
            "ShowOSD": {"description": "Show the on-screen display for the current player", "params": [], "permission": "Navigate", "returns": {"type": "string"}, "type": "method"},
            "ShowPlayProcessInfo":  {"description":"NOT IMPLEMENTED."},
            "Up":  {"description": "Navigate Up in GUI","params": [],"permission": "Navigate","returns": {"type": "string"},"type": "method"}
        },
        "JSONRPC": {
            "GetConfiguration":  {"description": "Get client-specific configurations", "params": [], "permission": "ReadData", "returns": {"$ref": "Configuration"}, "type": "method"},
            "Introspect":  {"description": "Enumerates all actions and descriptions", "params": [{"default": true, "name": "getdescriptions", "type": "boolean"}, {"default": false, "name": "getmetadata", "type": "boolean"}, {"default": true, "name": "filterbytransport", "type": "boolean"}, {"name": "filter", "properties": {"getreferences": {"default": true, "description": "Whether or not to print the schema for referenced types", "type": "boolean"}, "id": {"description": "Name of a namespace, method or type", "required": true, "type": "string"}, "type": {"description": "Type of the given name", "enums": ["method", "namespace", "type", "notification"], "required": true, "type": "string"}}, "type": "object"}], "permission": "ReadData", "returns": {"additionalProperties": false, "type": "object"}, "type": "method"},
            "NotifyAll":  {"description": "Notify all other connected clients", "params": [{"name": "sender", "required": true, "type": "string"}, {"name": "message", "required": true, "type": "string"}, {"default": null, "name": "data", "type": "any"}], "permission": "ReadData", "returns": {"type": "any"}, "type": "method"},
            "Permission":  {"description": "Retrieve the clients permissions", "params": [], "permission": "ReadData", "returns": {"properties": {"controlgui": {"required": true, "type": "boolean"}, "controlnotify": {"required": true, "type": "boolean"}, "controlplayback": {"required": true, "type": "boolean"}, "controlpower": {"required": true, "type": "boolean"}, "controlpvr": {"required": true, "type": "boolean"}, "controlsystem": {"required": true, "type": "boolean"}, "executeaddon": {"required": true, "type": "boolean"}, "manageaddon": {"required": true, "type": "boolean"}, "navigate": {"required": true, "type": "boolean"}, "readdata": {"required": true, "type": "boolean"}, "removedata": {"required": true, "type": "boolean"}, "updatedata": {"required": true, "type": "boolean"}, "writefile": {"required": true, "type": "boolean"}}, "type": "object"}, "type": "method"},
            "Ping":  {"description": "Ping responder","params": [],"permission": "ReadData","returns": {"type": "string"},"type": "method"},
            "SetConfiguration":  {"description": "Change the client-specific configuration", "params": [{"name": "notifications", "properties": {"application": {"$ref": "Optional.Boolean", "default": null}, "audiolibrary": {"$ref": "Optional.Boolean", "default": null}, "gui": {"$ref": "Optional.Boolean", "default": null}, "input": {"$ref": "Optional.Boolean", "default": null}, "other": {"$ref": "Optional.Boolean", "default": null}, "player": {"$ref": "Optional.Boolean", "default": null}, "playlist": {"$ref": "Optional.Boolean", "default": null}, "system": {"$ref": "Optional.Boolean", "default": null}, "videolibrary": {"$ref": "Optional.Boolean", "default": null}}, "type": "object"}], "permission": "ControlNotify", "returns": {"$ref": "Configuration"}, "type": "method"},
            "Version":  {"description": "Retrieve the JSON-RPC protocol version.", "params": [], "permission": "ReadData", "returns": {"properties": {"version": {"properties": {"major": {"description": "Bumped on backwards incompatible changes to the API definition", "minimum": 0, "required": true, "type": "integer"}, "minor": {"description": "Bumped on backwards compatible additions/changes to the API definition", "minimum": 0, "required": true, "type": "integer"}, "patch": {"description": "Bumped on any changes to the internal implementation but not to the API definition", "minimum": 0, "required": true, "type": "integer"}}, "required": true, "type": "object"}}, "type": "object"}, "type": "method"}
        },
        "PVR": {
            "AddTimer":  {"description": "Adds a timer to record the given show one times or a timer rule to record all showings of the given show or adds a reminder timer or reminder timer rule", "params": [{"$ref": "Library.Id", "description": "the broadcast id of the item to record", "name": "broadcastid", "required": true}, {"default": false, "description": "controls whether to create a timer rule or a onetime timer", "name": "timerrule", "type": "boolean"}, {"default": false, "description": "controls whether to create a reminder timer or a recording timer", "name": "reminder", "type": "boolean"}], "permission": "ControlPVR", "returns": {"type": "string"}, "type": "method"},
            "DeleteTimer":  {"description": "Deletes a onetime timer or a timer rule", "params": [{"$ref": "Library.Id", "description": "the id of the onetime timer or timer rule to delete", "name": "timerid", "required": true}], "permission": "ControlPVR", "returns": {"type": "string"}, "type": "method"},
            "GetBroadcastDetails":  {"description": "Retrieves the details of a specific broadcast", "params": [{"$ref": "Library.Id", "name": "broadcastid", "required": true}, {"$ref": "PVR.Fields.Broadcast", "name": "properties"}], "permission": "ReadData", "returns": {"properties": {"broadcastdetails": {"$ref": "PVR.Details.Broadcast"}}, "type": "object"}, "type": "method"},
            "GetBrodcastIsPlayable":  {"description": "Retrieves whether or not a broadcast is playable", "params": [{"$ref": "Library.Id", "description": "the id of the broadcast to to check for playability", "name": "broadcastid", "required": true}], "permission": "ReadData", "returns": {"type": "boolean"}, "type": "method"},
            "GetBroadcasts":  {"description":"NOT IMPLEMENTED."},
            "GetChannelDetails":  {"description":"NOT IMPLEMENTED."},
            "GetChannelGroupDetails":  {"description":"NOT IMPLEMENTED."},
            "GetChannelGroups":  {"description":"NOT IMPLEMENTED."},
            "GetChannels":  {"description":"NOT IMPLEMENTED."},
            "GetClients":  {"description":"NOT IMPLEMENTED."},
            "GetProperties":  {"description":"NOT IMPLEMENTED."},
            "GetRecordingDetails":  {"description":"NOT IMPLEMENTED."},
            "GetRecordings":  {"description":"NOT IMPLEMENTED."},
            "GetTimeDetails":  {"description":"NOT IMPLEMENTED."},
            "GetTimers":  {"description":"NOT IMPLEMENTED."},
            "Record":  {"description":"NOT IMPLEMENTED."},
            "Scan":  {"description": "NOT IMPLEMENTED."},
            "ToggleTimer":  {"description": "NOT IMPLEMENTED."}
        },
        "Player": {
            "AddSubtitle":  {"description": "Add subtitle to the player", "params": [{"$ref": "Player.Id", "name": "playerid", "required": true}, {"description": "Local path or remote URL to the subtitle file to load", "name": "subtitle", "required": true, "type": "string"}], "permission": "ControlPlayback", "returns": {"type": "string"}, "type": "method"},
            "GetActivePlayers":  {"description": "Returns all active players", "params": [], "permission": "ReadData", "returns": {"items": {"properties": {"playerid": {"$ref": "Player.Id", "required": true}, "playertype": {"enums": ["internal", "external", "remote"], "required": true, "type": "string"}, "type": {"$ref": "Player.Type", "required": true}}, "type": "object"}, "type": "array", "uniqueItems": true}, "type": "method"},
            "GetItem":  {"description": "Retrieves the currently played item", "params": [{"$ref": "Player.Id", "name": "playerid", "required": true}, {"$ref": "List.Fields.All", "name": "properties"}], "permission": "ReadData", "returns": {"properties": {"item": {"$ref": "List.Item.All", "required": true}}, "type": "object"}, "type": "method"},
            "GetPlayers":  {"description": "Get a list of available players", "params": [{"default": "all", "enums": ["all", "video", "audio"], "name": "media", "type": "string"}], "permission": "ReadData", "returns": {"items": {"properties": {"name": {"$ref": "Global.String.NotEmpty", "required": true}, "playsaudio": {"required": true, "type": "boolean"}, "playsvideo": {"required": true, "type": "boolean"}, "type": {"enums": ["internal", "external", "remote"], "required": true, "type": "string"}}, "type": "object"}, "type": "array", "uniqueItems": true}, "type": "method"},
            "GetProperties":  {"description":"NOT IMPLEMENTED."},
            "GetViewMod":  {"description":"NOT IMPLEMENTED."},
            "GoTo":  {"description":"NOT IMPLEMENTED."},
            "Move":  {"description":"NOT IMPLEMENTED."},
            "Open":  {"description":"NOT IMPLEMENTED."},
            "PlayPause":  {"description":"NOT IMPLEMENTED."},
            "Rotate":  {"description":"NOT IMPLEMENTED."},
            "Seek":  {"description":"NOT IMPLEMENTED."},
            "SetAudioStream":  {"description":"NOT IMPLEMENTED."},
            "SetPartyMode":  {"description":"NOT IMPLEMENTED."},
            "SetRepeat":  {"description":"NOT IMPLEMENTED."},
            "SetShuffle":  {"description":"NOT IMPLEMENTED."},
            "SetSpeed":  {"description":"NOT IMPLEMENTED."},
            "SetSubtitle":  {"description":"NOT IMPLEMENTED."},
            "SetVideoStream":  {"description":"NOT IMPLEMENTED."},
            "SetViewMode":  {"description":"NOT IMPLEMENTED."},
            "Stop":  {"description":"NOT IMPLEMENTED."},
            "Zoom":  {"description": "NOT IMPLEMENTED."}
        },
        "Playlist": {
            "Add":  {"description":"NOT IMPLEMENTED."},
            "Clear":  {"description":"NOT IMPLEMENTED."},
            "GetItems":  {"description":"NOT IMPLEMENTED."},
            "GetPlaylists":  {"description":"NOT IMPLEMENTED."},
            "GetProperties":  {"description":"NOT IMPLEMENTED."},
            "Insert":  {"description":"NOT IMPLEMENTED."},
            "Remove":  {"description":"NOT IMPLEMENTED."},
            "Swap":  {"description":"NOT IMPLEMENTED."}
        },
        "Profiles": {
            "GetCurrentProfile":  {"description":"NOT IMPLEMENTED."},
            "GetProfiles":  {"description":"NOT IMPLEMENTED."},
            "LoadProfile":  {"description":"NOT IMPLEMENTED."}
        },
        "Settings": {
            "GetCategories":  {"description": "Retrieves all setting categories", "params": [{"$ref": "Setting.Level", "default": "standard", "name": "level"}, {"default": "", "name": "section", "type": "string"}, {"extends": "Item.Fields.Base", "items": {"enums": ["settings"], "type": "string"}, "name": "properties"}], "permission": "ReadData", "returns": {"properties": {"categories": {"items": {"$ref": "Setting.Details.Category"}, "type": "array"}}, "type": "object"}, "type": "method"},
            "GetSections":  {"description": "Retrieves all setting sections", "params": [{"$ref": "Setting.Level", "default": "standard", "name": "level"}, {"extends": "Item.Fields.Base", "items": {"enums": ["categories"], "type": "string"}, "name": "properties"}], "permission": "ReadData", "returns": {"properties": {"sections": {"items": {"$ref": "Setting.Details.Section"}, "type": "array"}}, "type": "object"}, "type": "method"},
            "GetSettingValue":  {"description": "Retrieves the value of a setting", "params": [{"minLength": 1, "name": "setting", "required": true, "type": "string"}], "permission": "ReadData", "returns": {"properties": {"value": {"$ref": "Setting.Value.Extended", "required": true}}, "type": "object"}, "type": "method"},
            "GetSettings":  {"description": "Retrieves all settings", "params": [{"$ref": "Setting.Level", "default": "standard", "name": "level"}, {"name": "filter", "type": [{"additionalProperties": false, "properties": {"category": {"minLength": 1, "required": true, "type": "string"}, "section": {"minLength": 1, "required": true, "type": "string"}}, "type": "object"}]}], "permission": "ReadData", "returns": {"properties": {"settings": {"items": {"$ref": "Setting.Details.Setting"}, "type": "array"}}, "type": "object"}, "type": "method"},
            "ResetSettingValue":  {"description": "Resets the value of a setting", "params": [{"minLength": 1, "name": "setting", "required": true, "type": "string"}], "permission": "ReadData", "returns": {"type": "string"}, "type": "method"},
            "SetSettingValue":  {"description": "Changes the value of a setting", "params": [{"minLength": 1, "name": "setting", "required": true, "type": "string"}, {"$ref": "Setting.Value.Extended", "name": "value", "required": true}], "permission": "ReadData", "returns": {"type": "boolean"}, "type": "method"}
        },
        "System": {
            "EjectOpticalDrive":  {"description": "Ejects or closes the optical disc drive (if available)", "params": [], "permission": "ControlSystem", "returns": {"type": "string"}, "type": "method"},
            "GetProperties":  {"description": "Shuts the system running Kodi down", "params": [], "permission": "ControlPower", "returns": {"type": "string"}, "type": "method"},
            "Hibernate":  {"description": "Puts the system running Kodi into hibernate mode", "params": [], "permission": "ControlPower", "returns": {"type": "string"}, "type": "method"},
            "Reboot":  {"description": "Reboots the system running Kodi", "params": [], "permission": "ControlPower", "returns": {"type": "string"}, "type": "method"},
            "Shutdown":  {"description": "Shuts the system running Kodi down", "params": [], "permission": "ControlPower", "returns": {"type": "string"}, "type": "method"},
            "Suspend":  {"description": "Suspends the system running Kodi", "params": [], "permission": "ControlPower", "returns": {"type": "string"}, "type": "method"}
        },
        "VideoLibrary": {
            "Clean":  {"description": "Cleans the video library for non-existent items", "params": [{"default": true, "description": "Whether or not to show the progress bar or any other GUI dialog", "name": "showdialogs", "type": "boolean"}, {"default": "video", "description": "Content type to clean for", "enums": ["video", "movies", "tvshows", "musicvideos"], "name": "content", "type": "string"}, {"default": "", "description": "Path to the directory to clean up; performs a global cleanup if not specified", "name": "directory", "type": "string"}], "permission": "RemoveData", "returns": {"type": "string"}, "type": "method"},
            "Export":  {"description": "Exports all items from the video library", "params": [{"name": "options", "type": [{"additionalProperties": false, "properties": {"path": {"description": "Path to the directory to where the data should be exported", "minLength": 1, "required": true, "type": "string"}}, "type": "object"}, {"additionalProperties": false, "properties": {"actorthumbs": {"default": false, "description": "Whether to export actor thumbnails", "type": "boolean"}, "images": {"default": false, "description": "Whether to export thumbnails and fanart images", "type": "boolean"}, "overwrite": {"default": false, "description": "Whether to overwrite existing exported files", "type": "boolean"}}, "type": "object"}]}], "permission": "WriteFile", "returns": {"type": "string"}, "type": "method"},
            "GetEpisodeDetails":  {"description":"NOT IMPLEMENTED."},
            "GetEpisodes":  {"description":"NOT IMPLEMENTED."},
            "GetInProgressTVShows":  {"description":"NOT IMPLEMENTED."},
            "GetMovieDetails":  {"description":"NOT IMPLEMENTED."},
            "GetMovieSetDetails":  {"description":"NOT IMPLEMENTED."},
            "GetMovieSets":  {"description":"NOT IMPLEMENTED."},
            "GetMovies":  {"description":"NOT IMPLEMENTED."},
            "GetRecentlyAddedEpisodes":  {"description":"NOT IMPLEMENTED."},
            "GetRecentlyAddedMovies":  {"description":"NOT IMPLEMENTED."},
            "GetTVShowDetails":  {"description":"NOT IMPLEMENTED."},
            "GetTVShows":  {"description":"NOT IMPLEMENTED."},
            "RefreshEpisode":  {"description":"NOT IMPLEMENTED."},
            "RefreshMovie":  {"description":"NOT IMPLEMENTED."},
            "RefreshTVShow":  {"description":"NOT IMPLEMENTED."},
            "Scan":  {"description": "Scans the video sources for new library items", "params": [{"default": "", "name": "directory", "type": "string"}, {"default": true, "description": "Whether or not to show the progress bar or any other GUI dialog", "name": "showdialogs", "type": "boolean"}], "permission": "UpdateData", "returns": {"type": "string"}, "type": "method"}
        }
    },
    "references": {
        "Application.Property.Name": {
            "default": "volume",
            "enums": [
                "volume",
                "muted",
                "name",
                "version",
                "sorttokens",
                "language"
            ],
            "id": "Application.Property.Name",
            "type": "string"
        },
        "Global.IncrementDecrement": {
            "default": "increment",
            "enums": [
                "increment",
                "decrement"
            ],
            "id": "Global.IncrementDecrement",
            "type": "string"
        },
        "Global.Toggle": {
            "default": null,
            "id": "Global.Toggle",
            "type": [
                {
                    "type": "boolean"
                },
                {
                    "enums": [
                        "toggle"
                    ],
                    "type": "string"
                }
            ]
        },
        "List.Filter.Albums": {
            "id": "List.Filter.Albums",
            "type": [
              {
                "properties": {
                  "and": {
                    "items": {
                      "$ref": "List.Filter.Albums"
                    },
                    "minItems": 1,
                    "required": true,
                    "type": "array"
                  }
                },
                "type": "object"
              },
              {
                "properties": {
                  "or": {
                    "items": {
                      "$ref": "List.Filter.Albums"
                    },
                    "minItems": 1,
                    "required": true,
                    "type": "array"
                  }
                },
                "type": "object"
              },
              {
                "$ref": "List.Filter.Rule.Albums"
              }
            ]
        },
        "Setting.Level": {
            "default": "basic",
            "enums": [
                "basic",
                "standard",
                "advanced",
                "expert"
            ],
            "id": "Setting.Level",
            "type": "string"
        }
    }
}